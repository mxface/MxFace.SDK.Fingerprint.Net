@page "/"
@rendermode InteractiveServer
@using MxFace.Fingerprint.SDK.Core.Capture
@using MxFace.Fingerprint.SDK.Core.Device
@using MxFace.Fingerprint.SDK.Core.Enroll
@using MxFace.Fingerprint.SDK.Core.Matching
@using MxFace.Fingerprint.SDK.Core.Models.Requests
@using MxFace.Fingerprint.SDK.Core.Models.Response
@using MxFace.Fingerprint.SDK.Core.Search
@using MxFace.Fingerprint.SDK.Data.Core.Models
@using MxFace.Fingerprint.SDK.Sample.Net.Data.Contexts
@inject IDevice deviceService
@inject IMatch matchingServices
@inject ICapture capturingServices
@inject IEnroll<MxFaceFingerprintSDKContext> enrollServices
@inject ISearch<MxFaceFingerprintSDKContext> searchServices

<PageTitle>MxFace Fingerprint Sample</PageTitle>

@if (ConnectedDevice is null)
{
    <p>No Device Found!</p>
}
else
{
    <!-- Capture Section Start-->

    <div class="custom_card">
        <p class="heading_title">Capture</p>
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="d-flex justify-content-between">
                    <div class="custom_card details_box w-100 mb-0">
                        <div class="detail_item_box"><strong>Serial No:</strong> @ConnectedDevice.DeviceInfo.SerialNo</div>
                        <div class="detail_item_box"><strong>Model:</strong> @ConnectedDevice.DeviceInfo.Model</div>
                        <div class="detail_item_box"><strong>Make:</strong> @ConnectedDevice.DeviceInfo.Make</div>
                        <div class="detail_item_box"><strong>Status:</strong> <span class="text-warning">@ConnectedDevice.ErrorDescription</span></div>
                    </div>
                    <div class="custom_card details_box w-100 ms-3 mb-0 text-center">



                        @if (FingerprintData is not null)
                        {
                            @if (captureFingerprints.ContainsKey("capture1"))
                            {
                                <div class="captured_img">
                                    <img id="imgFingerprints" class="img-thumbnail" src="@GetImage("capture1")" alt="Capture 1" />
                                </div>
                            }
                            else
                            {
                                <div class="captured_img">
                                    <img id="imgFingerprints" class="img-thumbnail" src="../FingerDemo.svg" alt="Capture 1" />
                                </div>
                            }
                        }
                        else
                        {
                            <div class="captured_img">
                                <img id="imgFingerprints" class="img-thumbnail" src="../FingerDemo.svg" width="220" height="220" alt="Capture 1" />
                            </div>
                        }

                        <button id="btnCapture1" class="btn btn_primary mt-3 w-100" @onclick="@(() => CaptureFingerPrintAsync("capture1"))">
                            <i class="fas fa-camera"></i> Capture 1
                        </button>
                    </div>
                </div>
            </div>

            <div class="col-6">
                <div class="custom_card mb-0 h-100">
                    @if (FingerprintData is not null)
                    {
                        @if (captureFingerprints.ContainsKey("capture1"))
                        {
                            <div class="row">
                                <div class="col-6 ">
                                    <div class="">
                                        <label for="txtStatus" class="form-label fw-bold text-secondary">Status:</label>
                                        <input type="text" value="@FingerprintData.ErrorDescription" id="txtStatus" class="form-control" disabled />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="">
                                        <label for="txtQuality" class="form-label fw-bold text-secondary">Quality:</label>
                                        <input type="text" value="@FingerprintData.Quality" id="txtQuality" class="form-control" disabled />
                                    </div>
                                </div>
                                <div class="col-12 mt-3">
                                    <div class="">
                                        <label for="txtImageData" class="form-label fw-bold text-secondary">Template Data:</label>
                                        <textarea id="txtImageData" class="form-control" rows="3" disabled>@FingerprintData.BitmapData</textarea>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Capture Section End -->

    <div class="custom_card">
        <div class="row">

            <!-- Template Section Start -->
            <div class="col-md-6 col-12">
                <p class="heading_title">Template</p>
                <div class="custom_card m-h-220px mb-0">

                    <div class="col-md-12 mt-2">
                        <div class="d-flex align-items-center">
                            <!-- Dropdown -->
                            <select id="templateDropdown" class="form-select me-2 w-50" @bind="templateRequest.TmpFormat">
                                <option value="">Select Template Type</option>
                                <option value="0">FMR_V2005</option>
                                <option value="1">FMR_V2011</option>
                                <option value="2">ANSI_V378</option>
                            </select>

                            <!-- Button -->
                            @* <button id="btnMatch" class="btn btn_primary w-50" @onclick="GetTemplateAsync">Get Template Data</button> *@
                        </div>
                    </div>



                    @if (FingerprintData is not null)
                    {
                        @if (templateResponse is not null)
                        {
                            <div class="row g-3 align-items-center mt-4">
                                <div class="col-12 mt-3">
                                    <label for="txtImageInfo" class="form-label fw-bold text-secondary">Template Data:</label>
                                    <input type="text" value="@templateResponse.ImgData" id="txtImageInfo" class="form-control" disabled />
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Please Capture Fingerprint first!</p>
                    }

                </div>
            </div>
            <!-- Template Section End -->
            <!-- Enroll Section Start -->
            <div class="col-md-6 col-12">
                <p class="heading_title">Enroll</p>
                <div class="custom_card m-h-220px mb-0">

                    <div class="row g-3 align-items-end">

                        <div class="d-flex align-items-center">
                            <!-- Dropdown -->
                            <div class="me-3">
                                <label for="templateDropdown" class="form-label fw-bold text-secondary">Template Type:</label>
                                <select id="templateDropdown" class="form-select me-2 w-80" @bind="@enrollRequest.TemplateTypeId">
                                    <option value="">Select Template Type</option>
                                    <option value="01JCG3A99WN60CP0Y1HYB6GWFK">FMR_V2005</option>
                                    <option value="01JCG3B86TDDKNHKFAPJZ5WD9Y">FMR_V2011</option>
                                    <option value="01JCG3BG7BBFZWBVDKEYWCD31K">ANSI_V378</option>
                                </select>
                            </div>

                            <!-- Code -->
                            <div>
                                <label for="enrollRequest.ExternalId" class="form-label fw-bold text-secondary">Code:</label>
                                <input type="text" @bind="enrollRequest.ExternalId" id="enrollRequest.ExternalId" class="form-control" />
                            </div>
                        </div>

                        <div class="mt-3 w-100">
                            <button id="btnEnroll" class="btn btn_primary w-100" @onclick="EnrollFingerPrintAsync">Enroll</button>
                        </div>
                    </div>

                    <div class="row g-3 align-items-center mt-3">


                        @if (enrollResponse is not null)
                        {
                            <div class="d-flex align-items-center mt-3">
                                <div class="w-50">
                                    <label for="enrollResponse.Code" class="form-label fw-bold text-secondary">Response Code:</label>
                                    <p id="enrollResponse.Code" class="detail_item_box p-3 text-success">@enrollResponse.Code</p>

                                </div>
                                <div class="w-50 ms-3">
                                    <label for="enrollResponse.Message" class="form-label fw-bold text-secondary">Message:</label>
                                    <p id="enrollResponse.Message" class="detail_item_box p-3 text-success">@enrollResponse.Message</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <!-- Enroll Section End -->

        </div>
    </div>

    <div class="custom_card">
        <div class="row">

            <!-- Search Section Start -->
            <div class="col-md-6 col-12">
                <p class="heading_title">Search</p>
                <div class="custom_card m-h-220px mb-0">
                    <div class="col-md-12 mt-2">
                        <button id="btnMatch" class="btn btn_primary w-100" @onclick="SearchFingerPrintAsync">Search</button>
                    </div>
                    @if (searchResponse is not null)
                    {
                        <div class="row g-3 align-items-center mt-4">
                            <div class="col-md-6">
                                <label for="txtImageInfo" class="form-label fw-bold text-secondary">SubjectId:</label>
                                <input type="text" value="@searchResponse.SubjectId" id="txtImageInfo" class="form-control" disabled />
                            </div>

                            <div class="col-md-6">
                                <label for="txtIsoTemplate" class="form-label fw-bold text-secondary">Image Data:</label>
                                <textarea id="txtIsoTemplate" class="form-control" rows="2" disabled>@searchResponse.Template</textarea>
                            </div>


                        </div>
                    }
                    else
                    {
                        <p>No match results found!</p>
                    }
                </div>
            </div>
            <!-- Search Section End -->
            <!-- Capture and Matcj Section Start -->
            <div class="col-md-6 col-12">
                <p class="heading_title">Capture and Match</p>
                <div class="custom_card m-h-220px mb-0">
                    <div class="col-md-12 mt-2">
                        <button id="btnMatch" class="btn btn_primary w-100" @onclick="MatchAsync">Capture and Match</button>
                    </div>
                    @if (matchResponse.Status)
                    {
                        <label for="txtStatus" class="form-label fw-bold text-secondary">Status:</label>
                        <input type="text" value="Matched" id="txtStatus" class="form-control" disabled />
                    }
                    else
                    {
                        <label for="txtStatus" class="form-label fw-bold text-secondary">Status:</label>
                        <input type="text" value="Unmatched" id="txtStatus" class="form-control" disabled />
                    }
                </div>
            </div>
            <!-- Capture and Match Section End -->
        </div>
    </div>




    <!--Match Section Start -->

    <div class="custom_card">
        <p class="heading_title">Match</p>
        <div class="row g-3 align-items-center">
            <div class="col-md-6">
                <div class="d-flex justify-content-between">
                    <div class="custom_card w-100 mb-0 text-center">
                        <p class="text_primary">Capture 1</p>
                        @if (FingerprintData is not null)
                        {
                            @if (captureFingerprints.ContainsKey("capture1"))
                            {
                                <div class="captured_img">
                                    <img id="imgFingerprints" alt="Capture 1" class="img-thumbnail" height="220" width="220" src="@GetImage("capture1")" />
                                </div>
                            }
                            else
                            {
                                <div class="captured_img">
                                    <img id="imgFingerprints" alt="Capture 1" class="img-thumbnail" src="../FingerDemo.svg" height="220" width="220" />
                                </div>
                            }
                        }
                        else
                        {
                            <div class="captured_img">
                                <img id="imgFingerprints" alt="Capture 1" class="img-thumbnail" src="../FingerDemo.svg" height="220" width="220" />
                            </div>
                        }
                    </div>
                    <div class="custom_card w-100 mb-0 text-center ms-3">

                        @if (FingerprintData is not null)
                        {
                            @if (captureFingerprints.ContainsKey("capture2"))
                            {
                                <div class="captured_img">
                                    <img id="imgFingerprints" alt="Capture 2" class="img-thumbnail" height="220" width="220" src="@GetImage("capture2")" />
                                </div>
                            }
                            else
                            {
                                <div class="captured_img">
                                    <img id="imgFingerprints" alt="Capture 2" class="img-thumbnail" src="../FingerDemo.svg" height="220" width="220" />
                                </div>
                            }
                        }
                        else
                        {
                            <div class="captured_img">
                                <img id="imgFingerPrints" alt="Capture 2" class="img-thumbnail" src="../FingerDemo.svg" height="220" width="220" />
                            </div>
                        }
                        <div class="mt-3">
                            <button id="btnEnroll" class="btn btn_primary w-100" @onclick="@(() => CaptureFingerPrintAsync("capture2"))">Capture 2</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <button id="btnEnroll" class="btn btn_primary w-100" @onclick="VerifyAsync">Match</button>
            </div>
            <div class="col-md-4">
                <div class="custom_card mb-0">
                    @if (verifyResponse.Status)
                    {
                        <label for="txtStatus" class="form-label fw-bold text-secondary">Status:</label>
                        <input type="text" value="Matched" id="txtStatus" class="form-control" disabled />
                    }
                    else
                    {
                        <label for="txtStatus" class="form-label fw-bold text-secondary">Status:</label>
                        <input type="text" value="Unmatched" id="txtStatus" class="form-control" disabled />
                    }
                </div>
            </div>
        </div>
    </div>

    <!--Match Section End -->
}

@code {
    // Existing code remains unchanged
    ConnectedDevice? ConnectedDevice;
    CaptureViewModel? FingerprintData;
    EnrollmentRequest? enrollRequest;
    EnrollmentResponse? enrollResponse;
    SearchRequest? searchRequest;
    SearchResponse? searchResponse;
    TemplateRequest? templateRequest;
    TemplateResponse? templateResponse;
    string? FingerprintBitMap;
    private string? ProbTemplate;
    private string? GalleryTemplate;
    MatchResponse? matchResponse;
    MatchRequest? matchRequest;
    VerifyRequest? verifyRequest;
    VerifyResponse? verifyResponse;
    private int captureCount = 0;
    private Dictionary<string, string> captureFingerprints = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        var DeviceNames = new List<string>();
        await deviceService.GetConnectedDevicesAsync(DeviceNames);

        ConnectedDevice = await deviceService.GetDeviceInfoAsync(DeviceNames[0]);

        enrollRequest ??= new EnrollmentRequest();
        searchRequest ??= new SearchRequest();
        matchRequest ??= new MatchRequest();
        templateRequest ??= new TemplateRequest();
        verifyRequest ??= new VerifyRequest();
        verifyResponse ??= new VerifyResponse();
        matchResponse ??= new MatchResponse();
        searchRequest ??= new SearchRequest();
        searchResponse ??= new SearchResponse();
    }

    private async Task CaptureFingerPrintAsync(string captureKey)
    {
        if (captureFingerprints.ContainsKey(captureKey))
        {
            captureFingerprints[captureKey] = null;
        }

        StateHasChanged();

        FingerprintData = await capturingServices.StartCaptureAsync(10, 60);

        templateResponse = await capturingServices.GetTemplateAsync(templateRequest);


        if (enrollRequest is not null)
        {
            captureFingerprints[captureKey] = FingerprintData.BitmapData;

            if (captureKey == "capture1")
            {
                matchRequest.FingerPrintData = templateResponse.ImgData;
                verifyRequest.FingerprintData1 = templateResponse.ImgData;
                searchRequest.FingerPrint = templateResponse.ImgData;
            }
            else
            {
                matchRequest.FingerPrintData = templateResponse.ImgData;
                verifyRequest.FingerprintData2 = templateResponse.ImgData;
            }
            enrollRequest.FingerPrintData = templateResponse.ImgData;


        }
        StateHasChanged();
    }

    private string GetImage(string captureKey)
    {
        if (captureFingerprints.ContainsKey(captureKey) && !string.IsNullOrEmpty(captureFingerprints[captureKey]))
        {
            return $"data:image/bmp;base64,{captureFingerprints[captureKey]}";
        }
        return "";
    }

    private async Task EnrollFingerPrintAsync()
    {
        enrollResponse = await enrollServices.EnrollAsync(enrollRequest);
    }

    private async Task SearchFingerPrintAsync()
    {
        searchResponse = await searchServices.SearchAsync(searchRequest);
    }

    private async Task MatchAsync()
    {
        await matchingServices.MatchAsync(matchRequest);
    }

    private async Task VerifyAsync()
    {
        verifyResponse = await matchingServices.VerifyAsync(verifyRequest);
    }
}
